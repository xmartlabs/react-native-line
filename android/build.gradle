buildscript {
    def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : "1.9.24"

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle"
        classpath "com.facebook.react:react-native-gradle-plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: "com.android.library"
apply plugin: "com.facebook.react"
apply plugin: "kotlin-android"

android {
    compileSdkVersion safeExtGet("compileSdkVersion", 35)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 24)
        targetSdkVersion safeExtGet("targetSdkVersion", 35)
        versionCode 1
        versionName "5.2.1"
    }

    sourceSets {
        main {
            java.srcDirs += ["${project.buildDir}/generated/source/codegen/java"]
        }
    }
}

dependencies {
    implementation "com.facebook.react:react-native:+"
    implementation "com.linecorp.linesdk:linesdk:5.11.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
}

tasks.register("checkNativeLineLoginSpec") {
    doLast {
        if (!isNewArchitectureEnabled()) {
            throw new GradleException("@xmartlabs/react-native-line v5 requires your project to have NEW ARCHITECTURE ENABLED. Use v4 if you want to keep using the old architecture.")
        }
    }
}

preBuild.dependsOn checkNativeLineLoginSpec
